/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/sass/main.scss":
/*!**********************************!*\
  !*** ./resources/sass/main.scss ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Fzcy9tYWluLnNjc3MiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3Nhc3MvbWFpbi5zY3NzP2U4ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/sass/main.scss\n");

/***/ }),

/***/ "./resources/js/app.js":
/*!*****************************!*\
  !*** ./resources/js/app.js ***!
  \*****************************/
/***/ (() => {

eval("\n\n/*************************************\nGLOBAL VARIABLES\n *************************************/\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar token = window.Laravel.csrfToken;\n\n/*************************************\n CLASSIC FUNCTIONS\n *************************************/\n\n/***\n * Change the slide in a slider\n ***/\nfunction changeSlide(slider, slideNumber) {\n  var percentage = -100 * slideNumber;\n  var spaces = 4 * slideNumber;\n  slider.style.transform = \"translateX(calc(\".concat(percentage, \"% - \").concat(spaces, \"rem\");\n  sliderCounter = slideNumber;\n}\n\n/***\n * Display an error message in an area passed in parameters\n ***/\nfunction displayErrorMessage(errorArea, message) {\n  errorArea.textContent = message;\n  errorArea.style.display = 'inline-block';\n}\n\n/*************************************\n AJAX FUNCTIONS\n *************************************/\n\n/***\n * Allow to make an AJAX call considering the token\n ***/\nfunction csrfFetch(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options.headers = _objectSpread(_objectSpread({}, options.headers), {}, {\n    'Content-Type': 'application/json',\n    'X-CSRF-TOKEN': token\n  });\n  return fetch(url, options);\n}\n\n/*************************************\n EVENTS LISTENERS\n *************************************/\n\n/***\n * Display the to-top button when scrolling down\n ***/\nvar toTopButton = document.querySelector(\".to-top\");\nif (window.scrollY > window.innerHeight / 2) {\n  toTopButton.classList.add(\"active\");\n}\nwindow.addEventListener('scroll', function () {\n  if (window.scrollY > window.innerHeight / 2) {\n    toTopButton.classList.add(\"active\");\n  } else {\n    toTopButton.classList.remove(\"active\");\n  }\n});\n\n/***\n * Open the nav menu on mobile\n ***/\nvar burgerMenu = document.querySelector(\".burger-menu\");\nburgerMenu.addEventListener(\"click\", function () {\n  document.querySelector(\"header\").classList.toggle(\"menu-open\");\n});\n\n/***\n * Open login modal\n ***/\nvar loginSection = document.getElementById(\"login-section\");\nvar loginButton = document.getElementById(\"open-login-modal\");\nif (loginButton) {\n  loginButton.addEventListener(\"click\", function () {\n    loginSection.classList.add(\"active\");\n  });\n}\n\n/***\n * Switch between login and registration interfaces\n ***/\nvar loginInterface = document.querySelector(\".login-interface\");\nvar registerInterface = document.querySelector(\".register-interface\");\nvar registrationLink = document.getElementById(\"registration-link\");\nregistrationLink.addEventListener(\"click\", function () {\n  loginInterface.classList.remove(\"active\");\n  registerInterface.classList.add(\"active\");\n});\nvar loginLink = document.getElementById(\"login-link\");\nloginLink.addEventListener(\"click\", function () {\n  registerInterface.classList.remove(\"active\");\n  loginInterface.classList.add(\"active\");\n});\n\n/***\n * Close login modal\n ***/\nvar closeModalsButtons = document.querySelectorAll(\".close-modal\");\ncloseModalsButtons.forEach(function (closeButton) {\n  closeButton.addEventListener(\"click\", function () {\n    loginSection.classList.remove(\"active\");\n  });\n});\n\n/***\n * Change the slide of slider when clic on arrows\n ***/\nvar slider = document.querySelector(\".slider\");\nvar sliderLength = document.querySelectorAll(\".slider article\").length - 1;\nvar sliderCounter = 0;\nif (slider) {\n  var sliderParent = slider.parentElement;\n  var containerSlider = sliderParent.parentElement;\n  var sliderLeftArrow = sliderParent.querySelector(\".arrow-left\");\n  sliderLeftArrow.addEventListener(\"click\", function () {\n    if (sliderCounter == 0) {\n      sliderCounter = sliderLength;\n    } else {\n      sliderCounter--;\n    }\n    if (containerSlider.querySelector(\".slider-tags\")) {\n      containerSlider.querySelector(\".slider-tags .active\").classList.remove('active');\n      containerSlider.querySelector(\".slider-tags li[data-position=\\\"\".concat(sliderCounter, \"\\\"]\")).classList.add('active');\n    }\n    changeSlide(slider, sliderCounter);\n  });\n  var sliderRightArrow = sliderParent.querySelector(\".arrow-right\");\n  sliderRightArrow.addEventListener(\"click\", function () {\n    if (sliderCounter == sliderLength) {\n      sliderCounter = 0;\n    } else {\n      sliderCounter++;\n    }\n    if (containerSlider.querySelector(\".slider-tags\")) {\n      containerSlider.querySelector(\".slider-tags .active\").classList.remove('active');\n      containerSlider.querySelector(\".slider-tags li[data-position=\\\"\".concat(sliderCounter, \"\\\"]\")).classList.add('active');\n    }\n    changeSlide(slider, sliderCounter);\n  });\n}\n\n/***\n * Change the slide of slider when clic on tags\n ***/\nif (slider) {\n  var _sliderParent = slider.parentElement;\n  var _containerSlider = _sliderParent.parentElement;\n  var sliderTags = _containerSlider.querySelectorAll('.slider-tags li');\n  sliderTags.forEach(function (tag) {\n    tag.addEventListener(\"click\", function () {\n      _containerSlider.querySelector('.slider-tags .active').classList.remove('active');\n      tag.classList.add('active');\n      changeSlide(slider, tag.dataset.position);\n    });\n  });\n}\n\n/***\n * Open a notification\n ***/\nvar openNotifButton = document.querySelectorAll(\".open-notification\");\nopenNotifButton.forEach(function (openNotif) {\n  openNotif.addEventListener(\"click\", function () {\n    var notification = openNotif.parentElement;\n    if (notification.classList.contains('open')) {\n      notification.style.height = '90px';\n      notification.classList.remove('open');\n    } else {\n      var notificationContentHeight = notification.scrollHeight + 30;\n      notification.style.height = notificationContentHeight + 'px';\n      notification.classList.add('open');\n    }\n  });\n});\n\n/***\n * Show the interested clients' list for a property\n ***/\nvar showInterestedClients = document.querySelectorAll(\".show-interested-clients\");\nshowInterestedClients.forEach(function (openInterested) {\n  openInterested.addEventListener(\"click\", function () {\n    var favoriteCard = openInterested.closest(\".favorite-card\");\n    var interestedList = favoriteCard.querySelector(\".interested-clients\");\n    if (interestedList.classList.contains(\"active\")) {\n      interestedList.classList.remove(\"active\");\n    } else {\n      interestedList.classList.add(\"active\");\n    }\n  });\n});\n\n/***\n * Open the textarea for write a client's notification\n ***/\nvar openNotificationTextarea = document.querySelectorAll(\".write-notification-client\");\nopenNotificationTextarea.forEach(function (openTextarea) {\n  openTextarea.addEventListener(\"click\", function () {\n    var writeArea = openTextarea.parentElement;\n    if (writeArea.classList.contains(\"active\")) {\n      writeArea.classList.remove(\"active\");\n    } else {\n      writeArea.classList.add(\"active\");\n    }\n  });\n});\n\n/***\n * Add the property in user's favorites\n ***/\nvar addToFavoriteButton = document.getElementById('add-to-favorite');\nif (addToFavoriteButton) {\n  var id_bienImmo = addToFavoriteButton.getAttribute('data-id-bien');\n  addToFavoriteButton.addEventListener(\"click\", function () {\n    csrfFetch('/check-user-connected', {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.isConnected === true) {\n        if (addToFavoriteButton.classList.contains('as--favorite')) {\n          csrfFetch('/remove-favorite', {\n            method: 'POST',\n            body: JSON.stringify({\n              id_bienImmo: id_bienImmo\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (data.removedFavorite === true) {\n              addToFavoriteButton.classList.remove('as--favorite');\n              addToFavoriteButton.title = \"Ajouter aux favoris\";\n              alert(data.message);\n            } else {\n              alert(data.message);\n            }\n          })[\"catch\"](function (error) {\n            console.error('Une erreur est survenue durant le retrait du bien en favoris', error);\n          });\n        } else {\n          csrfFetch('/add-favorite', {\n            method: 'POST',\n            body: JSON.stringify({\n              id_bienImmo: id_bienImmo\n            })\n          }).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            if (data.registeredFavorite === true) {\n              addToFavoriteButton.classList.add('as--favorite');\n              addToFavoriteButton.title = \"Retirer des favoris\";\n              alert(data.message);\n            }\n          })[\"catch\"](function (error) {\n            console.error('Une erreur est survenue durant l\\'ajout du bien en favoris', error);\n          });\n        }\n      } else {\n        displayErrorMessage(document.getElementById('error-check-user-connected'), 'Connectez-vous à votre compte pour pouvoir ajouter des biens en favoris !');\n      }\n    })[\"catch\"](function (error) {\n      console.error('Une erreur est survenue durant la vérification de la connexion de l\\'utilisateur :', error);\n    });\n  });\n}\n\n/***\n * Display the properties loaded when we clicked on pagination's button\n ***/\nvar propertiesPaginationButton = document.getElementById(\"load-more-properties\");\nif (propertiesPaginationButton) {\n  propertiesPaginationButton.addEventListener('click', function () {\n    var nextPage = propertiesPaginationButton.getAttribute('data-next-page');\n    if (nextPage) {\n      csrfFetch('/load-more-properties', {\n        method: 'POST',\n        body: JSON.stringify({\n          page: nextPage\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        var propertyList = document.getElementById('property-list');\n        data.properties.forEach(function (property) {\n          var propertyCard = \"\\n                        <a href=\\\"/detail-property/\".concat(property.id_bienImmo, \"\\\" class=\\\"card-immo\\\">\\n                            <div class=\\\"img-container\\\">\\n                                <img src=\\\"\").concat(property.image_url, \"\\\" alt=\\\"\").concat(property.titre_annonce, \"\\\">\\n                                <span class=\\\"filter-img\\\"></span>\\n                                <p class=\\\"price-property\\\">\").concat(property.prix_formatted.toLocaleString(), \" \\u20AC</p>\\n                            </div>\\n                            <p class=\\\"title-property\\\">\").concat(property.titre_annonce, \"</p>\\n                            <p class=\\\"city-property\\\"><i class=\\\"fas fa-map-marker-alt\\\"></i>\").concat(property.ville, \"</p>\\n                            <div class=\\\"criterias-property\\\">\\n                                <div>\\n                                    <i class=\\\"fas fa-bed\\\"></i>\\n                                    <p><strong>\").concat(property.nb_chambres, \"</strong> chambre(s)</p>\\n                                </div>\\n                                <div>\\n                                    <i class=\\\"fas fa-bath\\\"></i>\\n                                    <p><strong>\").concat(property.nb_sdb, \"</strong> salle(s) de bain</p>\\n                                </div>\\n                                <div>\\n                                    <i class=\\\"fas fa-ruler-combined\\\"></i>\\n                                    <p><strong>\").concat(property.surface, \"</strong> m2</p>\\n                                </div>\\n                            </div>\\n                            <button class=\\\"a-button h-bg-primary h-color-white\\\">D\\xE9couvrir ce bien</button>\\n                        </a>\\n                    \");\n          propertyList.insertAdjacentHTML('beforeend', propertyCard);\n        });\n        if (data.next_page) {\n          propertiesPaginationButton.setAttribute('data-next-page', data.next_page);\n        } else {\n          propertiesPaginationButton.style.display = 'none';\n        }\n      })[\"catch\"](function (error) {\n        return console.error('Il y a eu une erreur durant le chargement de davantage de biens immobiliers : ', error);\n      });\n    }\n  });\n}\n\n/***\n * Register a user's search in the database\n ***/\nvar saveSearchButton = document.getElementById('save-search');\nif (saveSearchButton) {\n  saveSearchButton.addEventListener('click', function () {\n    var _this = this;\n    csrfFetch('/check-user-connected', {\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.isConnected === true) {\n        var formData = {\n          propertyStatus: document.querySelector('input[name=\"property-status\"]:checked').value,\n          propertyType: document.getElementById('select-type').value,\n          propertyKeywords: document.getElementById('text-keywords').value,\n          propertyCity: document.getElementById('text-city').value,\n          propertyMinPrice: document.getElementById('number-min-price').value,\n          propertyMaxPrice: document.getElementById('number-max-price').value\n        };\n        csrfFetch('/save-search', {\n          method: 'POST',\n          body: JSON.stringify(formData)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data.searchRegistered) {\n            _this.disabled = true;\n            _this.innerHTML = '<i class=\"fa-solid fa-floppy-disk\"></i>Recherche enregistrée';\n            _this.removeAttribute('id');\n            alert('Votre recherche a été enregistrée avec succès !');\n          }\n        })[\"catch\"](function (error) {\n          console.error('Une erreur est survenue durant l\\'enregistrement de la recherche : ', error);\n        });\n      } else {\n        displayErrorMessage(document.getElementById('error-check-user-connected'), 'Connectez-vous à votre compte pour pouvoir ajouter des biens en favoris !');\n      }\n    })[\"catch\"](function (error) {\n      console.error('Une erreur est survenue durant la vérification de la connexion de l\\'utilisateur :', error);\n    });\n  });\n}\n\n/***\n * Delete a user's search from the database\n ***/\nvar deleteSearchButton = document.querySelectorAll('.delete-search');\nif (deleteSearchButton) {\n  deleteSearchButton.forEach(function (deleteButton) {\n    deleteButton.addEventListener('click', function (event) {\n      var _this2 = this;\n      event.preventDefault();\n      var searchId = this.dataset.searchId;\n      csrfFetch(\"/delete-search/\".concat(searchId), {\n        method: 'DELETE'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.searchDeleted) {\n          _this2.closest('.search-card').remove();\n        }\n      })[\"catch\"](function (error) {\n        return console.error('Une erreur s\\'est produite au moment de la suppression de la recherche : ', error);\n      });\n    });\n  });\n}\nvar deleteContactRequestButton = document.querySelectorAll('.delete-contact-request');\nif (deleteContactRequestButton) {\n  deleteContactRequestButton.forEach(function (deleteButton) {\n    deleteButton.addEventListener('click', function (event) {\n      var _this3 = this;\n      event.preventDefault();\n      var contactRequestId = this.dataset.contactRequestId;\n      csrfFetch(\"/delete-contact-request/\".concat(contactRequestId), {\n        method: 'DELETE'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.contactRequestDeleted) {\n          _this3.closest('.notification').remove();\n        }\n      })[\"catch\"](function (error) {\n        return console.error('Une erreur s\\'est produite au moment de la suppression de la demande de contact : ', error);\n      });\n    });\n  });\n}\n\n/*************************************\n FORM SUBMISSIONS\n *************************************/\n\n/***\n * Register user's form\n ***/\ndocument.querySelector('#register-user-form').addEventListener('submit', function (event) {\n  event.preventDefault();\n  document.querySelectorAll('.text-danger').forEach(function (element) {\n    element.style.display = 'none';\n    element.textContent = '';\n  });\n  var hasError = false;\n  var firstname = document.getElementById('firstname').value;\n  if (firstname === '') {\n    displayErrorMessage(document.getElementById('error-firstname'), 'Ce champ est obligatoire.');\n    hasError = true;\n  }\n  var lastname = document.getElementById('lastname').value;\n  if (lastname === '') {\n    displayErrorMessage(document.getElementById('error-lastname'), 'Ce champ est obligatoire.');\n    hasError = true;\n  }\n  var phone = document.getElementById('phone').value;\n  var onlyDigitPattern = /^[0-9]+$/;\n  if (phone === '') {\n    displayErrorMessage(document.getElementById('error-phone'), 'Ce champ est obligatoire.');\n    hasError = true;\n  } else if (!onlyDigitPattern.test(phone)) {\n    displayErrorMessage(document.getElementById('error-phone'), 'Ce champ peut contenir uniquement des chiffres');\n    hasError = true;\n  }\n  var mail2 = document.getElementById('mail2').value;\n  if (mail2 === '') {\n    displayErrorMessage(document.getElementById('error-mail2'), 'Ce champ est obligatoire.');\n    hasError = true;\n  } else if (!/\\S+@\\S+\\.\\S+/.test(mail2)) {\n    displayErrorMessage(document.getElementById('error-mail2'), 'Votre adresse doit posséder une @ et un . entourés d\\'autres caractères pour être valide');\n    hasError = true;\n  }\n  var password2 = document.getElementById('password2').value;\n  var digitPattern = /[0-9]/;\n  var letterPattern = /[a-zA-Z]/;\n  var specialCharPattern = /[!@#$%^&*(),.?\":{}|<>]/;\n  if (password2.length < 8) {\n    displayErrorMessage(document.getElementById('error-password2'), 'Le mot de passe doit contenir au moins 8 caractères.');\n    hasError = true;\n  } else if (!digitPattern.test(password2)) {\n    displayErrorMessage(document.getElementById('error-password2'), 'Le mot de passe doit contenir au moins 1 chiffre.');\n    hasError = true;\n  } else if (!letterPattern.test(password2)) {\n    displayErrorMessage(document.getElementById('error-password2'), 'Le mot de passe doit contenir au moins 1 lettre.');\n    document.getElementById('error-password2').style.display = 'block';\n    hasError = true;\n  } else if (!specialCharPattern.test(password2)) {\n    displayErrorMessage(document.getElementById('error-password2'), 'Le mot de passe doit contenir au moins 1 caractère spécial.');\n    hasError = true;\n  }\n  var password2_confirmation = document.getElementById('password2_confirmation').value;\n  if (password2 !== password2_confirmation) {\n    displayErrorMessage(document.getElementById('error-password2_confirmation'), 'Vos 2 mots de passe ne correspondent pas.');\n    hasError = true;\n  }\n\n  // Check if the user's mail already exists with an AJAX function\n  if (!hasError) {\n    csrfFetch(\"/check-email\", {\n      method: 'POST',\n      body: JSON.stringify({\n        email: mail2\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.existingEmail === true) {\n        displayErrorMessage(document.getElementById('error-mail2'), 'L\\'adresse mail renseignée est déja associée à un compte utilisateur.');\n        hasError = true;\n      } else {\n        // If the mail doesn't already exists, send the form submission for a server's side validation\n        event.target.submit();\n      }\n    })[\"catch\"](function (error) {\n      console.error('Une erreur est survenue durant la vérification de l\\'adresse mail :', error);\n      displayErrorMessage(document.getElementById('error-mail2'), 'Une erreur est survenue lors de la vérification de l\\'adresse mail.');\n      hasError = true;\n    });\n  }\n});\n\n/***\n * Login user's form\n ***/\ndocument.querySelector('#connect-user-form').addEventListener('submit', function (event) {\n  event.preventDefault();\n  document.querySelectorAll('.text-danger').forEach(function (element) {\n    element.style.display = 'none';\n    element.textContent = '';\n  });\n  var hasError = false;\n  var mail = document.getElementById('mail').value;\n  if (mail === '') {\n    displayErrorMessage(document.getElementById('error-mail'), 'Ce champ est obligatoire.');\n    hasError = true;\n  } else if (!/\\S+@\\S+\\.\\S+/.test(mail)) {\n    displayErrorMessage(document.getElementById('error-mail'), 'Votre adresse doit posséder une @ et un . entourés d\\'autres caractères pour être valide');\n    hasError = true;\n  }\n  var password = document.getElementById('password').value;\n  if (password === '') {\n    displayErrorMessage(document.getElementById('error-password'), 'Ce champ est obligatoire.');\n    hasError = true;\n  }\n  if (!hasError) {\n    csrfFetch(\"/verify-user\", {\n      method: 'POST',\n      body: JSON.stringify({\n        email: mail,\n        password: password\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.existingUser === false) {\n        displayErrorMessage(document.getElementById('error-mail'), data.message);\n        hasError = true;\n      } else {\n        // If the mail doesn't already exists, send the form submission for a server's side validation\n        event.target.submit();\n      }\n    })[\"catch\"](function (error) {\n      console.error('Une erreur est survenue durant la vérification de l\\'utilisateur :', error);\n      displayErrorMessage(document.getElementById('error-mail'), 'Une erreur est survenue lors de la vérification de l\\'utilisateur.');\n      hasError = true;\n    });\n  }\n});\n\n/***\n * Sale property's form\n ***/\nif (document.querySelector('#sale-property-form')) {\n  document.querySelector('#sale-property-form').addEventListener('submit', function (event) {\n    event.preventDefault();\n    var digitPattern = /^\\d+$/;\n    document.querySelectorAll('.text-danger').forEach(function (element) {\n      element.style.display = 'none';\n      element.textContent = '';\n    });\n    var hasError = false;\n    var title = document.getElementById('title').value;\n    if (title === '') {\n      displayErrorMessage(document.getElementById('error-title'), 'Ce champ est obligatoire.');\n      hasError = true;\n    }\n    var price = document.getElementById('price').value;\n    if (price === '') {\n      displayErrorMessage(document.getElementById('error-price'), 'Ce champ est obligatoire.');\n      hasError = true;\n    } else if (price < 0) {\n      displayErrorMessage(document.getElementById('error-price'), 'Le prix de votre bien ne peut pas être négatif.');\n      hasError = true;\n    }\n    var description = document.getElementById('description').value;\n    if (description === '') {\n      displayErrorMessage(document.getElementById('error-description'), 'Ce champ est obligatoire.');\n      hasError = true;\n    }\n    var address = document.getElementById('address').value;\n    if (address === '') {\n      displayErrorMessage(document.getElementById('error-address'), 'Ce champ est obligatoire.');\n      hasError = true;\n    }\n    var city = document.getElementById('city').value;\n    if (city === '') {\n      displayErrorMessage(document.getElementById('error-city'), 'Ce champ est obligatoire.');\n      hasError = true;\n    }\n    var postal = document.getElementById('postal').value;\n    if (postal === '') {\n      displayErrorMessage(document.getElementById('error-postal'), 'Ce champ est obligatoire.');\n      hasError = true;\n    } else if (!digitPattern.test(postal)) {\n      displayErrorMessage(document.getElementById('error-postal'), 'Ce champ ne peut contenir que des chiffres.');\n      hasError = true;\n    }\n    var area = document.getElementById('area').value;\n    if (area === '') {\n      displayErrorMessage(document.getElementById('error-area'), 'Ce champ est obligatoire.');\n      hasError = true;\n    } else if (area < 0) {\n      displayErrorMessage(document.getElementById('error-area'), 'La surface de votre bien ne peut pas être négative.');\n      hasError = true;\n    }\n    var nb_rooms = parseInt(document.getElementById('nb_rooms').value, 10);\n    if (nb_rooms == '') {\n      displayErrorMessage(document.getElementById('error-nb_rooms'), 'Ce champ est obligatoire.');\n      hasError = true;\n    } else if (nb_rooms < 0) {\n      displayErrorMessage(document.getElementById('error-nb_rooms'), 'Le nombre de pièces de votre bien ne peut pas être négatif.');\n      hasError = true;\n    }\n    var nb_bedrooms = parseInt(document.getElementById('nb_bedrooms').value, 10);\n    if (nb_bedrooms == '') {\n      displayErrorMessage(document.getElementById('error-nb_bedrooms'), 'Ce champ est obligatoire.');\n      hasError = true;\n    } else if (nb_bedrooms < 0) {\n      displayErrorMessage(document.getElementById('error-nb_bedrooms'), 'Le nombre de chambres de votre bien ne peut pas être négatif.');\n      hasError = true;\n    } else if (nb_bedrooms > nb_rooms) {\n      displayErrorMessage(document.getElementById('error-nb_bedrooms'), 'Le nombre de chambres de votre bien ne peut pas supérieur au nombre total de pièces.');\n      hasError = true;\n    }\n    var nb_bathrooms = parseInt(document.getElementById('nb_bathrooms').value, 10);\n    if (nb_bathrooms == '') {\n      displayErrorMessage(document.getElementById('error-nb_bathrooms'), 'Ce champ est obligatoire.');\n      hasError = true;\n    } else if (nb_bathrooms < 0) {\n      displayErrorMessage(document.getElementById('error-nb_bathrooms'), 'Le nombre de salles de bain de votre bien ne peut pas être négatif.');\n      hasError = true;\n    } else if (nb_bathrooms > nb_rooms) {\n      displayErrorMessage(document.getElementById('error-nb_bathrooms'), 'Le nombre de salles de bain de votre bien ne peut pas supérieur au nombre total de pièces.');\n      hasError = true;\n    }\n    if (!hasError) {\n      csrfFetch('/check-user-connected', {\n        method: 'POST'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data.isConnected === true) {\n          event.target.submit();\n        } else {\n          displayErrorMessage(document.getElementById('error-check-user-connected'), 'Connectez-vous à votre compte pour pouvoir nous soumettre un bien à vendre ou à louer !');\n        }\n      })[\"catch\"](function (error) {\n        console.error('Une erreur est survenue durant la vérification de la connexion de l\\'utilisateur :', error);\n      });\n    }\n  });\n}\n\n/***\n * Contact form\n ***/\nif (document.querySelector('#contact-form')) {\n  document.querySelector('#contact-form').addEventListener('submit', function (event) {\n    event.preventDefault();\n    document.querySelectorAll('.text-danger').forEach(function (element) {\n      element.style.display = 'none';\n      element.textContent = '';\n    });\n    var hasError = false;\n    var contactFirstname = document.getElementById('contact-firstname').value;\n    if (contactFirstname === '') {\n      displayErrorMessage(document.getElementById('error-contact-firstname'), 'Ce champ est obligatoire.');\n      hasError = true;\n    }\n    var contactLastname = document.getElementById('contact-lastname').value;\n    if (contactLastname === '') {\n      displayErrorMessage(document.getElementById('error-contact-lastname'), 'Ce champ est obligatoire.');\n      hasError = true;\n    }\n    var contactMail = document.getElementById('contact-mail').value;\n    if (contactMail === '') {\n      displayErrorMessage(document.getElementById('error-contact-mail'), 'Ce champ est obligatoire.');\n      hasError = true;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(contactMail)) {\n      displayErrorMessage(document.getElementById('error-contact-mail'), 'Votre adresse doit posséder une @ et un . entourés d\\'autres caractères pour être valide');\n      hasError = true;\n    }\n    var contactPhone = document.getElementById('contact-phonenum').value;\n    var onlyDigitPattern = /^[0-9]+$/;\n    if (contactPhone === '') {\n      displayErrorMessage(document.getElementById('error-contact-phonenum'), 'Ce champ est obligatoire.');\n      hasError = true;\n    } else if (!onlyDigitPattern.test(contactPhone)) {\n      displayErrorMessage(document.getElementById('error-contact-phonenum'), 'Ce champ peut contenir uniquement des chiffres');\n      hasError = true;\n    }\n\n    // Check if the user's mail already exists with an AJAX function\n    if (!hasError) {\n      event.target.submit();\n    }\n  });\n}\n\n/***\n * Update user form\n ***/\nif (document.querySelector('#update-user-form')) {\n  document.querySelector('#update-user-form').addEventListener('submit', function (event) {\n    event.preventDefault();\n    document.querySelectorAll('.text-danger').forEach(function (element) {\n      element.style.display = 'none';\n      element.textContent = '';\n    });\n    var hasError = false;\n    var updateFirstname = document.getElementById('update-firstname').value;\n    if (updateFirstname === '') {\n      displayErrorMessage(document.getElementById('error-update-firstname'), 'Ce champ est obligatoire.');\n      hasError = true;\n    }\n    var updateLastname = document.getElementById('update-lastname').value;\n    if (updateLastname === '') {\n      displayErrorMessage(document.getElementById('error-update-lastname'), 'Ce champ est obligatoire.');\n      hasError = true;\n    }\n    var updatePhone = document.getElementById('update-phone').value;\n    var onlyDigitPattern = /^[0-9]+$/;\n    if (updatePhone === '') {\n      displayErrorMessage(document.getElementById('error-update-phone'), 'Ce champ est obligatoire.');\n      hasError = true;\n    } else if (!onlyDigitPattern.test(updatePhone)) {\n      displayErrorMessage(document.getElementById('error-update-phone'), 'Ce champ peut contenir uniquement des chiffres');\n      hasError = true;\n    }\n    var updateMail = document.getElementById('update-mail').value;\n    if (updateMail === '') {\n      displayErrorMessage(document.getElementById('update-mail'), 'Ce champ est obligatoire.');\n      hasError = true;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(updateMail)) {\n      displayErrorMessage(document.getElementById('error-update-mail'), 'Votre adresse doit posséder une @ et un . entourés d\\'autres caractères pour être valide');\n      hasError = true;\n    }\n    var updatePassword = document.getElementById('update-password').value;\n    var digitPattern = /[0-9]/;\n    var letterPattern = /[a-zA-Z]/;\n    var specialCharPattern = /[!@#$%^&*(),.?\":{}|<>]/;\n    if (updatePassword.length < 8) {\n      displayErrorMessage(document.getElementById('error-update-password'), 'Le mot de passe doit contenir au moins 8 caractères.');\n      hasError = true;\n    } else if (!digitPattern.test(updatePassword)) {\n      displayErrorMessage(document.getElementById('error-update-password'), 'Le mot de passe doit contenir au moins 1 chiffre.');\n      hasError = true;\n    } else if (!letterPattern.test(updatePassword)) {\n      displayErrorMessage(document.getElementById('error-update-password'), 'Le mot de passe doit contenir au moins 1 lettre.');\n      document.getElementById('error-update-password').style.display = 'block';\n      hasError = true;\n    } else if (!specialCharPattern.test(updatePassword)) {\n      displayErrorMessage(document.getElementById('error-update-password'), 'Le mot de passe doit contenir au moins 1 caractère spécial.');\n      hasError = true;\n    }\n\n    // Check if the user's mail already exists with an AJAX function\n    if (!hasError) {\n      event.target.submit();\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/resources/js/app": 0,
/******/ 			"resources/css/app": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["resources/css/app"], () => (__webpack_require__("./resources/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["resources/css/app"], () => (__webpack_require__("./resources/sass/main.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;